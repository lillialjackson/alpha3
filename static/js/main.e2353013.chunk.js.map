{"version":3,"sources":["img/alpha-logo.png","img/alpha-nav.png","img/search.png","img/chat.png","components/navigation/navigation.js","components/signin/signin.js","components/register/register.js","components/partnersearch/partnersearch.js","components/home/home.js","components/chat/message.js","components/chat/messagelist.js","components/chat/newroomform.js","components/chat/roomlist.js","components/chat/sendmessageform.js","components/chat/chatwrapper.js","ckConfig.js","components/comprender/comprender.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_this","this","props","isSignedIn","react_default","a","createElement","className","id","src","require","style","width","alt","onClick","onRouteChange","React","Component","SignIn","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","toLowerCase","trim","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","content-type","mode","body","JSON","stringify","email","state","password","then","response","json","user","alert","loadUser","htmlFor","type","name","onChange","placeholder","required","Register","onUsernameChange","username","onExperienceLevelChange","experienceLevel","onLocationChange","location","enableSubmitButton","disabled","Content-Type","concat","submitUser","catch","err","bind","assertThisInitialized","PartnerSearch","experiencelevel","partnerSearchResultData","results","newMatchedUserData","map","result","matchedUserTable","onSearch","marginBottom","es","data","columns","Header","accessor","defaultPageSize","Home","route","_this2","margin","Message","_ref","text","MessageList","node","ReactDOM","findDOMNode","shouldScrollToBottom","scrollTop","clientHeight","scrollHeight","roomId","messages","message","index","chat_message","key","senderId","NewRoomForm","roomName","handleChange","handleSubmit","e","preventDefault","createRoom","onSubmit","RoomList","orderedRooms","toConsumableArray","rooms","sort","b","listStyle","room","active","color","subscribeToRoom","href","SendMessageForm","inputMessage","sendMessage","ChatWrapper","joinableRooms","joinedRooms","getRooms","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","url","connect","currentUser","console","log","_this3","getJoinableRooms","_this4","hooks","onMessage","_this5","roomlist","messagelist","newroomform","sendmessageform","LoggedOut","home_home","register_register","signin","partnersearch_partnersearch","chatwrapper","App","input","onUsernameSubmitted","error","_this$state","_this$state$user","navigation","comprender","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","render","BrowserRouter","basename","process","src_App_0","document","getElementById","URL","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e2353013.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alpha-logo.238c687f.png\";","module.exports = __webpack_public_path__ + \"static/media/alpha-nav.e93d0e42.png\";","module.exports = __webpack_public_path__ + \"static/media/search.3a114c0b.png\";","module.exports = __webpack_public_path__ + \"static/media/chat.504e1674.png\";","import React from 'react';\n\n\nclass Navigation extends React.Component {\n\nrender(){\n  if (this.props.isSignedIn) {\n    return (\n        <div className = 'authenticate' >\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n              <img id=\"nav-logo\" className=\"navbar-brand\" src={require('../../img/alpha-nav.png')} style={{width: '30px'}} alt=\"alpha-nav\" />\n                <div className=\"collapse navbar-collapse\" id=\"navbarToggleExternalContent\">\n                  <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                      <a className=\"nav-link\" onClick = {() => this.props.onRouteChange('home')} >Home</a>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a className=\"nav-link\" onClick = {() => this.props.onRouteChange('search')} >Search</a>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a className=\"nav-link\" onClick = {() => this.props.onRouteChange('chat')} >Chat</a>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a className=\"nav-link\" onClick = {() => this.props.onRouteChange('signout')} >Sign Out</a>\n                    </li>\n                 </ul>\n               </div>\n            </nav>\n        </div>\n\n    );\n  } else {\n    return (\n        <div className = 'authenticate' >\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <img id=\"nav-logo\" className=\"navbar-brand\" src={require('../../img/alpha-nav.png')} style={{width: '30px'}} alt=\"alpha-nav\" />\n               <div className=\"collapse navbar-collapse\" id=\"options\">\n                 <ul className=\"navbar-nav mr-auto\">\n                   <li className=\"nav-item\">\n                       <a className=\"nav-link\" onClick = {() => this.props.onRouteChange('signin')} >\n                         Sign In\n                       </a>\n                  </li>\n                   <li className=\"nav-item\">\n                   <a className= \"nav-link\" onClick = {() => this.props.onRouteChange('register')} >\n                     Register\n                   </a>\n                  </li>\n                 </ul>\n               </div>\n            </nav>\n        </div>\n\n    );\n  }\n}\n}\n\n\nexport default Navigation;\n","import React from 'react';\n// import './signin.css';\n\n\nclass SignIn extends React.Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: ''\n    }\n  }\n\n  // input field change\n  onEmailChange = (event) => {\n    this.setState({signInEmail: event.target.value.toLowerCase().trim()})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({signInPassword: event.target.value})\n  }\n\n\n\n// POST fetch\n  onSubmitSignIn = () => {\n    return fetch('https://damp-forest-34333.herokuapp.com/signin',{\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n    .then(response => response.json())\n    .then(user => {\n      if(this.state.signInEmail === '' || this.state.signInPassword === ''){\n        return alert('Please fill out your credentials to sign in');\n      } else if (user.id){\n        this.props.loadUser(user);\n        return this.props.onRouteChange('home');\n      } else {\n        return alert('Error logging in!');\n      }\n    })\n  }\n\n\n  render(){\n\n    return(\n      <div className=\"text-center\">\n          <div className = 'form-signin'>\n          <img className=\"signin-logo mb-4\" style={{width: '100px'}} src={require('../../img/alpha-logo.png')} alt=\"Alpha Logo\" />\n          <div>\n          <h4 className=\"h3 mb-3 font-weight-normal\"> Sign In </h4>\n            <p> To demo Alpha: <br/> Login using email: Guest@email.com and password: password <br/>(Hint! Try searching climbers located in Bikini Bottom) </p>\n            <label htmlFor=\"email\" className='sr-only'> Email: </label>\n            <input type=\"email\" name=\"email\" id = 'signin-email'\n                    onChange ={this.onEmailChange}\n                    placeholder='email'\n                    className='form-control' required />\n            <label htmlFor=\"password\" className='sr-only'>Password: </label>\n            <input type=\"password\" name=\"psw\" id=\"signin-password\"\n                      onChange ={this.onPasswordChange}\n                      placeholder='password'\n                      className='form-control'required />\n            <button className= 'btn btn-lg btn-secondary btn-block' onClick={this.onSubmitSignIn} >\n                    Submit </button>\n                </div>\n                </div>\n              </div>\n            )\n          }\n}\n\nexport default SignIn;\n","import React from 'react';\nimport './register.css'\n\nclass Register extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      username: '',\n      experienceLevel: {},\n      location: '',\n      disabled: true\n    };\n    this.enableSubmitButton = this.enableSubmitButton.bind(this)\n  }\n\n  onUsernameChange = (event) => {\n    this.setState({username: event.target.value.toLowerCase().trim()})\n  }\n\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value.toLowerCase().trim()})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  onExperienceLevelChange = (event) => {\n    this.setState({experienceLevel: event.target.value})\n  }\n\n  onLocationChange = (event) => {\n\n    this.setState({location: event.target.value.toLowerCase().trim()})\n  }\n\nenableSubmitButton = () => {\n  this.setState({\n    disabled: !this.state.disabled\n  })\n}\n\n  onSubmitSignIn = () => {\n    fetch('https://damp-forest-34333.herokuapp.com/register',{\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        username: this.state.username,\n        experienceLevel: this.state.experienceLevel,\n        location: this.state.location\n      })\n    })\n    .then(response => response.json())\n    .then(user => {\n      if (this.state.email === '' || this.state.password === '' || this.state.username === '' ||\n          this.state.experienceLevel === '' || this.state.location === '' ) {\n        return alert('Please fill in all fields to register');\n      } else {\n        alert(`Thank you ${this.state.username} for registering for Alpha!`);\n        this.props.submitUser(this.state.username);\n        return this.props.onRouteChange('signin');\n      }\n    })\n    .catch(err => {\n      alert('Could not register user!');\n    })\n  }\n\n  render(){\n  return (\n    // begin registration form\n      <div className = 'text-center' >\n        <div className = 'form-signin'>\n          <img className=\"signin-logo mb-4\" style={{width: '100px'}} src={require('../../img/alpha-logo.png')} alt=\"Alpha Logo\" />\n        <div>\n          <h4 className=\"h3 mb-3 font-weight-normal\" > Setup Your Profile! </h4>\n          <label htmlFor=\"email\" className='sr-only'> Email: </label>\n          <input type=\"email\"\n                      name=\"email\"\n                      onChange = {this.onEmailChange}\n                      placeholder='email'\n                      className='form-control'\n                      required />\n          <label htmlFor=\"username\" className='sr-only'> Username: </label>\n          <input\n                      type=\"text\"\n                      name=\"username\"\n                      id=\"username\"\n                      onChange = {this.onUsernameChange}\n                      placeholder='username'\n                      className='form-control'\n                      required\n                      />\n          <label htmlFor=\"location\" className='sr-only'>Location: </label>\n          <input\n                      type=\"text\"\n                      name=\"location\"\n                      id=\"location\"\n                      onChange = {this.onLocationChange}\n                      className='form-control'\n                      placeholder = 'city'\n                                />\n          <label htmlFor=\"password\" className='sr-only'>Password: </label>\n          <input type=\"password\"\n                       name=\"psw\"\n                       id = 'password'\n                       onChange = {this.onPasswordChange}\n                       placeholder='password'\n                       className='form-control'\n                       required />\n\n              <div>\n                <div className='registerLabel'>\n                  <label htmlFor=\"experience\" className='experience-label'> Experience Level: </label>\n                </div>\n                <div className= 'inputField'>\n                  <select onChange = {this.onExperienceLevelChange}>\n                    <option value=\"none\">--</option>\n                    <option value=\"beginner\">Beginner</option>\n                    <option value=\"intermediate\">Intermediate</option>\n                    <option value=\"advanced\">Advanced</option>\n                    <option value=\"elite\">Elite</option>\n                  </select>\n                </div>\n                <div className=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" className=\"custom-control-input\" id=\"information-consent\" onClick={this.enableSubmitButton} />\n                  <label className=\"custom-control-label\" htmlFor=\"information-consent\">\n                  By checking the box, you agree to allow Alpha to store your provided information, solely as user credentials for this app.\n                  </label>\n                </div>\n                </div>\n              <br />\n              <button onClick ={this.onSubmitSignIn} className= 'btn btn-lg btn-secondary btn-block' disabled={this.state.disabled}> Submit </button>\n\n            </div>\n            </div>\n          </div>\n\n\n\n\n  )\n\n}\n\n\n\n}\nexport default Register;\n","import React from 'react';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\nimport './partnersearch.css';\n\nclass PartnerSearch extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: '',\n      experiencelevel: {},\n      location: '',\n      matchedUserTable: [{\n        username: '',\n        email: ''\n      }]\n    };\n  }\n\n// input field change\n  onExperienceLevelChange = (event) => {\n    return this.setState({experiencelevel: event.target.value});\n\n  }\n\n  onLocationChange = (event) => {\n    return this.setState({location: event.target.value.toLowerCase().trim()});\n  }\n\n\n// update state of search data returned\n  partnerSearchResultData = (results) => {\n      const newMatchedUserData = results.map(result => {\n          return {\n              username: result.username,\n              email: result.email\n          }\n      });\n\n      this.setState({\n          matchedUserTable: newMatchedUserData\n      });\n  }\n\n\n// search get fetch\n  onSearch = () => {\n    fetch(`https://damp-forest-34333.herokuapp.com/search?experiencelevel=${this.state.experiencelevel}&location=${this.state.location}`)\n    .then(response => response.json())\n    .then( response => {\n      this.partnerSearchResultData(response);\n    })\n    .catch(err => {\n      return alert('Could not find climbers in your area at this time');\n    })\n  }\n\n\n\n  render() {\n\n  // Table Data Const\n    const matchedUserTable = this.state.matchedUserTable;\n\n    const searchColumns = [\n      {\n        Header: 'Username',\n        accessor: 'username'\n      }, {\n        Header: 'Email',\n        accessor: 'email'\n   }]\n\n\n  return (\n    <div className=\"container\">\n        <div className=\"text-center\">\n        <div className=\"row\">\n          <div className= \"col-sm-12 col-md-4\">\n            <img className=\"card-img-top\" style={{width: '20%', marginBottom: '15px'}} src={require('../../img/search.png')} alt=\"Alpha Logo\" />\n          </div>\n          <div className= \"col-sm-12 col-md-8\">\n            <h4 className=\"h3 mb-3 font-weight-normal\"> Find a Partner! </h4>\n          </div>\n        </div>\n        </div>\n        <div>\n          <div className=\"row\">\n            <div className= \"col-sm-12 col-md-4\">\n            <label htmlFor=\"location\" className='sr-only'> Location: </label>\n            <input type=\"text\"\n                    name=\"location\"\n                    onChange= {this.onLocationChange}\n                    placeholder='location'\n                    className='location-search form-control'\n                    required />\n            <div>\n            <label htmlFor=\"experience-label\"> Experience Level: </label>\n            <div className= 'inputField'>\n                  <select onChange = {this.onExperienceLevelChange}>\n                    <option value=\"none\">--</option>\n                    <option value=\"beginner\">Beginner</option>\n                    <option value=\"intermediate\">Intermediate</option>\n                    <option value=\"advanced\">Advanced</option>\n                    <option value=\"elite\">Elite</option>\n                  </select>\n              </div>\n              </div>\n              <div>\n                <button id=\"search-btn\" className= 'btn btn-lg btn-secondary btn-block'\n                  onClick ={this.onSearch}>\n                   Find a Partner!\n                 </button>\n                </div>\n              </div>\n              <div className=\"col-sm-12 col-md-8\">\n              <ReactTable data={matchedUserTable} columns={searchColumns} defaultPageSize = {5} />\n              </div>\n              </div>\n              </div>\n\n    </div>\n  )}\n}\n\nexport default PartnerSearch;\n","import React from 'react';\nimport './home.css'\n\n\n\nclass Home extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      route: 'home'\n    }\n  }\nrender() {\n  return (\n      <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col-sm-12 col-md-4\">\n          <div className=\"card mb-4 box-shadow\">\n            <img className=\"card-img\" style={{width: '75%', margin: '0 auto'}} src={require('../../img/alpha-logo.png')} alt=\"Alpha Logo\" />\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-8\">\n          <div className=\"card mb-4 box-shadow\">\n          <h4 className=\"card-title\"> Climb, Explore, Connect! </h4>\n          <div className='card-body'>\n            <p className='card-text'> This is Alpha for Beta! Make connections in the climbing community! Connect with friends, chat about all things climbing, and find new partners!</p>\n            <p className='card-text'>\n              {`Welcome back ${this.props.username}! \\n The climbing is lovely in ${this.props.location}! \\n Your current experience level is ${this.props.experienceLevel}, good for you! \\n Climb on!`}\n            </p>\n          </div>\n          </div>\n        </div>\n\n        </div>\n        <div className=\"row\">\n        <div className=\"col-sm-12 col-md-6\">\n          <div className=\"card mb-4 box-shadow\">\n            <img className=\"card-img-top\" style={{width: '39%', margin: '0 auto'}} src={require('../../img/search.png')} alt=\"Alpha Logo\" />\n            <h4 className=\"card-title\"> Search </h4>\n            <p className=\"card-text\"> Search for new partners in your area! Search by area and experience level to find climbers that compliment your skills and goals!</p>\n            <button type=\"button\" className=\"btn btn-secondary\" onClick = {() => this.props.onRouteChange('search')}>Search</button>\n\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-6\">\n          <div className=\"card mb-4 box-shadow\">\n            <img className=\"card-img-top\" style={{width: '50%', margin: '0 auto'}} src={require('../../img/chat.png')} alt=\"Alpha Logo\" />\n            <h4 className=\"card-title\"> Chat </h4>\n            <p className=\"card-text\"> Chat with Alpha members, create new rooms and discussion topics, organize climbing trips, gear swaps, and other adventures! </p>\n            <button type=\"button\" className=\"btn btn-secondary\" onClick = {() => this.props.onRouteChange('chat')}>Chat</button>\n\n          </div>\n        </div>\n        </div>\n      </div>\n\n\n  );\n}\n}\n\nexport default Home;\n","import React from 'react';\n\n\nconst Message = ({username, text}) => {\n  return(\n    <div className= 'message'>\n      <div className = 'message-username'>{username}</div>\n      <div className='message-text'>{text}</div>\n    </div>\n\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport Message from './message.js';\n\n\n\nclass MessageList extends React.Component {\n\n  componentWillUpdate() {\n    const node = ReactDOM.findDOMNode(this)\n    this.shouldScrollToBottom = node.scrollTop + node.clientHeight + 100 >= node.scrollHeight\n  }\n\n  componentDidUpdate() {\n    if(this.shouldScrollToBottom){\n    const node = ReactDOM.findDOMNode(this)\n    node.scrollTop = node.scrollHeight\n    }\n\n  }\n\n  render(){\n    if (!this.props.roomId) {\n            return (\n                <div className=\"message-list\">\n                    <div className=\"join-room\">\n                        &larr; Join a room!\n                    </div>\n                </div>\n            )\n        }\n    return(\n      <div className=\"message-list\">\n          {this.props.messages.map((message, index) => {\n            return (\n              <Message key={message.id} username={message.senderId} text={message.text} />\n            )\n          })}\n      </div>\n\n    );\n  }\n\n}\n\nexport default MessageList;\n","import React from 'react';\n\n\nclass NewRoomForm extends React.Component {\n constructor() {\n      super()\n      this.state = {\n          roomName: ''\n      }\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(e) {\n      this.setState({\n          roomName: e.target.value\n      })\n  }\n\n  handleSubmit(e) {\n      e.preventDefault()\n      this.props.createRoom(this.state.roomName)\n      this.setState({roomName: ''})\n  }\n\n  render () {\n      return (\n          <div className=\"new-room-form\">\n              <form onSubmit={this.handleSubmit}>\n                  <input\n                     value={this.state.roomName}\n                      onChange={this.handleChange}\n                      type=\"text\"\n                      placeholder=\"Creat a room\"\n                      required />\n                  <button id=\"create-room-btn\" type=\"submit\">+</button>\n          </form>\n      </div>\n      )\n  }\n}\n\nexport default NewRoomForm;\n","import React from 'react';\n\n\nclass RoomList extends React.Component {\n  render () {\n         const orderedRooms = [...this.props.rooms].sort((a, b) => a.id > b.id)\n         return (\n            <div className=\"room-list\">\n                 <ul style={{listStyle: 'none'}}>\n                 <h3 className=\"h3 mb-3 font-weight-normal\">Your rooms:</h3>\n                     {orderedRooms.map(room => {\n                         const active = room.id === this.props.roomId ? 'active' : '';\n                         return (\n                             <li key={room.id} className={\"room \" + active}>\n                                 <a\n                                    style={{color:'#a83f2a'}}\n                                     onClick={() => this.props.subscribeToRoom(room.id)}\n                                     href=\"#\">\n                                     # {room.name}\n                                 </a>\n                             </li>\n                         )\n                     })}\n                 </ul>\n\n                </div>\n\n\n        );\n     }\n}\n\nexport default RoomList;\n","import React from 'react';\n\n\nclass SendMessageForm extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      inputMessage:''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n handleChange(e) {\n  this.setState({\n    inputMessage: e.target.value\n  })\n}\n\nhandleSubmit(e){\n  e.preventDefault()\n  this.props.sendMessage(this.state.inputMessage)\n  this.setState({\n    inputMessage: ''\n  })\n}\n\n\n  render(){\n\n    return(\n      <form\n        onSubmit={this.handleSubmit}\n        className='send-message-form'>\n        <input\n          disabled= {this.props.disabled}\n          onChange={this.handleChange}\n          value={this.state.inputMessage}\n          placeholder=\"Type Message and hit Enter\"\n          type=\"text\" />\n      </form>\n    );\n  }\n}\n\nexport default SendMessageForm;\n","import React from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './messagelist.js'\nimport NewRoomForm from './newroomform.js'\nimport RoomList from './roomlist.js'\nimport SendMessageForm from './sendmessageform.js'\nimport './chatstyle.css'\n\nimport {instanceLocator, tokenUrl} from '../../ckConfig.js'\n\n\nclass ChatWrapper extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      roomId: '',\n      messages: [],\n      joinableRooms:[],\n      joinedRooms: []\n    }\n    this.sendMessage = this.sendMessage.bind(this);\n    this.subscribeToRoom = this.subscribeToRoom.bind(this);\n    this.getRooms = this.getRooms.bind(this);\n    this.createRoom = this.createRoom.bind(this)\n  }\n\n    componentDidMount(){\n      const chatManager = new ChatManager({\n        instanceLocator: instanceLocator,\n        userId: this.props.username,\n        tokenProvider: new TokenProvider({\n          url: tokenUrl\n        })\n\n        // key: chatKey\n        })\n\n      chatManager.connect()\n      .then(currentUser => {\n        this.currentUser = currentUser\n        this.getRooms()\n        this.subscribeToRoom()\n\n\n      })\n      .catch(err => console.log('error on connecting', err))\n    }\n\n\n    getRooms() {\n    this.currentUser.getJoinableRooms()\n    .then(joinableRooms => {\n      this.setState({\n        joinableRooms,\n        joinedRooms: this.currentUser.rooms\n      })\n    })\n    .catch(err => console.log('error on joinable rooms', err))\n    }\n\n    subscribeToRoom(roomId) {\n    this.setState({ messages:[] })\n    this.currentUser.subscribeToRoom({\n      roomId:roomId,\n      hooks: {\n        onMessage: message => {\n          this.setState({\n            messages: [...this.state.messages, message]\n          })\n        }\n      }\n    })\n    .then(room => {\n      this.setState({\n        roomId: room.id\n      })\n      this.getRooms();\n    })\n    .catch(err => console.log('error subscribing to room', err))\n    }\n\n    sendMessage(text) {\n    this.currentUser.sendMessage({\n      text,\n      roomId:this.state.roomId\n\n    })\n    }\n\n    createRoom(name) {\n        this.currentUser.createRoom({\n              name\n          })\n          .then(room => this.subscribeToRoom(room.id))\n          .catch(err => console.log('error with createRoom: ', err))\n    }\n\n  render(){\n    return (\n      <div className=\"chat-container\">\n          <RoomList\n            roomId = {this.state.roomId}\n            subscribeToRoom={this.subscribeToRoom}\n            rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]} />\n          <MessageList\n            roomId={this.state.roomId}\n            messages={this.state.messages} />\n          <NewRoomForm createRoom= {this.createRoom} />\n          <SendMessageForm\n          disabled={!this.state.roomId}\n          sendMessage={this.sendMessage} />\n\n\n      </div>\n\n    );\n  }\n}\n\nexport default ChatWrapper;\n","// Chatkit Auth Tokens\n\nconst tokenUrl = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/8ece90f0-98f0-43ff-ab31-0d59a9995c14/token\";\n\nconst instanceLocator = \"v1:us1:8ece90f0-98f0-43ff-ab31-0d59a9995c14\";\n\n// const chatKey = \"\";\n\nexport {instanceLocator, tokenUrl}\n","import React from 'react';\nimport SignIn from '../signin/signin.js';\nimport Register from '../register/register.js';\nimport PartnerSearch from '../partnersearch/partnersearch.js';\nimport Home from '../home/home.js';\nimport ChatWrapper from '../chat/chatwrapper.js'\n\nclass LoggedOut extends React.Component {\n\n  render(){\n      if(this.props.route === 'home'){\n      return (\n        <div>\n          <Home username={this.props.username} location={this.props.location} experienceLevel={this.props.experienceLevel} onRouteChange={this.props.onRouteChange} />\n        </div>\n\n      );} else if (this.props.route === 'register'){\n        return (\n          <div>\n            <Register loadUser={this.loadUser} onRouteChange = {this.props.onRouteChange} username = {this.props.username} submitUser = {this.props.submitUser} />\n          </div>\n\n        );\n      }else if (this.props.route === 'signin'){\n        return (\n          <div>\n            <SignIn loadUser={this.props.loadUser} onRouteChange = {this.props.onRouteChange} />\n          </div>\n\n        );\n      }else if (this.props.route === 'signout'){\n        return (\n          <div>\n            <SignIn loadUser={this.props.loadUser} onRouteChange = {this.props.onRouteChange} />\n          </div>\n\n        );\n      }else if (this.props.route === 'search'){\n        return (\n          <div>\n            <PartnerSearch />\n          </div>\n\n        );\n      }else if (this.props.route === 'chat'){\n        return (\n          <div>\n            <ChatWrapper username={this.props.username} />\n          </div>\n\n        );\n      }\n    }\n}\n\nexport default LoggedOut;\n","import React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CompRender from './components/comprender/comprender.js'\n\n\nimport './App.css';\n\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      input : '',\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        username: '',\n        email:'',\n        location: '',\n        experienceLevel: ''\n      }\n\n    }\n    this.onUsernameSubmitted = this.onUsernameSubmitted.bind(this)\n    this.onRouteChange = this.onRouteChange.bind(this)\n    this.loadUser = this.loadUser.bind(this)\n    }\n\n\n// load user info\nloadUser = (data) => {\n  this.setState({user: {\n    username: data.username,\n    email: data.email,\n    experienceLevel: data.experiencelevel,\n    location: data.location\n  }})\n}\n\nonUsernameSubmitted(username) {\n   fetch('https://damp-forest-34333.herokuapp.com/users', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username }),\n    })\n      .then(response => {\n        this.setState({\n          username: username\n        })\n      })\n      .catch(error => console.error('error', error))\n  }\n\n// route change function\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n\n// begin render\n  render() {\n    const {isSignedIn, route} = this.state;\n    const {username, email, experienceLevel, location} = this.state.user;\n    return (\n      <div>\n        <Navigation isSignedIn = {isSignedIn}\n                    onRouteChange = {this.onRouteChange} />\n          <CompRender route={route}\n              isSignedIn = {isSignedIn}\n              onRouteChange = {this.onRouteChange}\n              username = {username}\n              email = {email}\n              location = {location}\n              experienceLevel = {experienceLevel}\n              loadUser = {this.loadUser}\n              submitUser = {this.onUsernameSubmitted}\n          />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}