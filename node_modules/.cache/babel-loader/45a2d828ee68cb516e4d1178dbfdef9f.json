{"ast":null,"code":"import _toConsumableArray from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Lillia/workspace/alpha2/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport SignIn from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport PartnerSearch from './components/partnersearch/partnersearch.js';\nimport Home from './components/home/home.js';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './components/chat/messagelist.js';\nimport SendMessageForm from './components/chat/sendmessageform.js';\nimport RoomList from './components/chat/roomlist.js';\nimport NewRoomForm from './components/chat/newroomform.js';\nimport './App.css';\nimport { instanceLocator, tokenUrl, chatKey } from './config.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          username: data.username,\n          email: data.email,\n          experienceLevel: data.experiencelevel,\n          location: data.location\n        }\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'signout') {\n        _this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = {\n      input: '',\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        username: '',\n        email: '',\n        location: '',\n        experienceLevel: ''\n      },\n      roomId: null,\n      messages: [],\n      joinableRooms: [],\n      joinedRooms: []\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.subscribeToRoom = _this.subscribeToRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getRooms = _this.getRooms.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createRoom = _this.createRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onUsernameSubmitted = _this.onUsernameSubmitted.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // load user info\n\n\n  _createClass(App, [{\n    key: \"onUsernameSubmitted\",\n    value: function onUsernameSubmitted(username) {\n      var _this2 = this;\n\n      fetch('https://damp-forest-34333.herokuapp.com/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username\n        })\n      }).then(function (response) {\n        _this2.setState({\n          username: username\n        });\n\n        console.log(username);\n      }).catch(function (error) {\n        return console.error('error', error);\n      });\n    } // form change functions\n    // onInputChange = (event) => {\n    //   this.setState({input: event.target.value});\n    // }\n    // route change function\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var chatManager = new ChatManager({\n        instanceLocator: instanceLocator,\n        userId: 'joeclimber',\n        tokenProvider: new TokenProvider({\n          url: tokenUrl\n        }) // key: chatKey\n\n      });\n      chatManager.connect().then(function (currentUser) {\n        _this3.currentUser = currentUser;\n\n        _this3.getRooms();\n\n        _this3.subscribeToRoom();\n      }).catch(function (err) {\n        return console.log('error on connecting', err);\n      });\n    }\n  }, {\n    key: \"getRooms\",\n    value: function getRooms() {\n      var _this4 = this;\n\n      this.currentUser.getJoinableRooms().then(function (joinableRooms) {\n        _this4.setState({\n          joinableRooms: joinableRooms,\n          joinedRooms: _this4.currentUser.rooms\n        });\n      }).catch(function (err) {\n        return console.log('error on joinable rooms', err);\n      });\n    }\n  }, {\n    key: \"subscribeToRoom\",\n    value: function subscribeToRoom(roomId) {\n      var _this5 = this;\n\n      this.setState({\n        messages: []\n      });\n      this.currentUser.subscribeToRoom({\n        roomId: roomId,\n        hooks: {\n          onMessage: function onMessage(message) {\n            _this5.setState({\n              messages: [].concat(_toConsumableArray(_this5.state.messages), [message])\n            });\n          }\n        }\n      }).then(function (room) {\n        _this5.setState({\n          roomId: room.id\n        });\n\n        _this5.getRooms();\n      }).catch(function (err) {\n        return console.log('error subscribing to room', err);\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(text) {\n      this.currentUser.sendMessage({\n        text: text,\n        roomId: this.state.roomId\n      });\n    }\n  }, {\n    key: \"createRoom\",\n    value: function createRoom(name) {\n      var _this6 = this;\n\n      this.currentUser.createRoom({\n        name: name\n      }).then(function (room) {\n        return _this6.subscribeToRoom(room.id);\n      }).catch(function (err) {\n        return console.log('error with createRoom: ', err);\n      });\n    } // begin render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          route = _this$state.route;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"alpha\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"\\u03B1\")), this.state.route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Home, {\n        username: this.state.user.username,\n        location: this.state.user.location,\n        experienceLevel: this.state.user.experienceLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(PartnerSearch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(RoomList, {\n        roomId: this.state.roomId,\n        subscribeToRoom: this.subscribeToRoom,\n        rooms: [].concat(_toConsumableArray(this.state.joinableRooms), _toConsumableArray(this.state.joinedRooms)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        roomId: this.state.roomId,\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(SendMessageForm, {\n        disabled: !this.state.roomId,\n        onSubmit: this.onUsernameSubmitted,\n        sendMessage: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(NewRoomForm, {\n        createRoom: this.createRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })) : route === 'signin' ? React.createElement(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        username: this.state.user.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Lillia/workspace/alpha2/src/App.js"],"names":["React","Component","Navigation","SignIn","Register","PartnerSearch","Home","ChatManager","TokenProvider","MessageList","SendMessageForm","RoomList","NewRoomForm","instanceLocator","tokenUrl","chatKey","App","loadUser","data","setState","user","username","email","experienceLevel","experiencelevel","location","onRouteChange","route","isSignedIn","state","input","roomId","messages","joinableRooms","joinedRooms","sendMessage","bind","subscribeToRoom","getRooms","createRoom","onUsernameSubmitted","fetch","method","headers","body","JSON","stringify","then","response","console","log","catch","error","chatManager","userId","tokenProvider","url","connect","currentUser","err","getJoinableRooms","rooms","hooks","onMessage","message","room","id","text","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport SignIn from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport PartnerSearch from './components/partnersearch/partnersearch.js';\nimport Home from './components/home/home.js';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './components/chat/messagelist.js';\nimport SendMessageForm from './components/chat/sendmessageform.js';\nimport RoomList from './components/chat/roomlist.js';\nimport NewRoomForm from './components/chat/newroomform.js';\n\n\nimport './App.css';\n\nimport {instanceLocator, tokenUrl, chatKey} from './config.js'\n\n\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      input : '',\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        username: '',\n        email:'',\n        location: '',\n        experienceLevel: ''\n      },\n        roomId: null,\n        messages: [],\n        joinableRooms:[],\n        joinedRooms: []\n\n    }\n      this.sendMessage = this.sendMessage.bind(this);\n      this.subscribeToRoom = this.subscribeToRoom.bind(this);\n      this.getRooms = this.getRooms.bind(this);\n      this.createRoom = this.createRoom.bind(this)\n      this.onUsernameSubmitted = this.onUsernameSubmitted.bind(this)\n\n    }\n\n\n// load user info\nloadUser = (data) => {\n  this.setState({user: {\n    username: data.username,\n    email: data.email,\n    experienceLevel: data.experiencelevel,\n    location: data.location\n  }})\n}\nonUsernameSubmitted(username) {\n   fetch('https://damp-forest-34333.herokuapp.com/users', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username }),\n    })\n      .then(response => {\n        this.setState({\n          username: username\n        })\n        console.log(username);\n      })\n      .catch(error => console.error('error', error))\n  }\n// form change functions\n  // onInputChange = (event) => {\n  //   this.setState({input: event.target.value});\n  // }\n\n// route change function\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  componentDidMount(){\n\n    const chatManager = new ChatManager({\n      instanceLocator: instanceLocator,\n      userId: 'joeclimber',\n      tokenProvider: new TokenProvider({\n        url: tokenUrl\n      })\n\n      // key: chatKey\n      })\n\n    chatManager.connect()\n    .then(currentUser => {\n      this.currentUser = currentUser\n      this.getRooms()\n      this.subscribeToRoom()\n\n\n    })\n    .catch(err => console.log('error on connecting', err))\n  }\n\n\n  getRooms() {\n  this.currentUser.getJoinableRooms()\n  .then(joinableRooms => {\n    this.setState({\n      joinableRooms,\n      joinedRooms: this.currentUser.rooms\n    })\n  })\n  .catch(err => console.log('error on joinable rooms', err))\n  }\n\n  subscribeToRoom(roomId) {\n  this.setState({ messages:[] })\n  this.currentUser.subscribeToRoom({\n    roomId:roomId,\n    hooks: {\n      onMessage: message => {\n        this.setState({\n          messages: [...this.state.messages, message]\n        })\n      }\n    }\n  })\n  .then(room => {\n    this.setState({\n      roomId: room.id\n    })\n    this.getRooms();\n  })\n  .catch(err => console.log('error subscribing to room', err))\n  }\n\n  sendMessage(text) {\n  this.currentUser.sendMessage({\n    text,\n    roomId:this.state.roomId\n\n  })\n  }\n\n  createRoom(name) {\n      this.currentUser.createRoom({\n            name\n        })\n        .then(room => this.subscribeToRoom(room.id))\n        .catch(err => console.log('error with createRoom: ', err))\n  }\n\n// begin render\n  render() {\n    const {isSignedIn, route} = this.state;\n    return (\n      <div className=\"App\">\n          <header className=\"App-header\">\n            <Navigation isSignedIn = {isSignedIn} onRouteChange = {this.onRouteChange} />\n            <h1 className=\"alpha\">α</h1>\n          </header>\n          {this.state.route === 'home'\n            ? <div>\n              <Home\n                  username = {this.state.user.username}\n                  location = {this.state.user.location}\n                  experienceLevel = {this.state.user.experienceLevel}\n              />\n              <PartnerSearch />\n              <RoomList\n                roomId = {this.state.roomId}\n                subscribeToRoom={this.subscribeToRoom}\n                rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]} />\n              <MessageList\n                roomId={this.state.roomId}\n                messages={this.state.messages} />\n              <SendMessageForm\n              disabled={!this.state.roomId}\n              onSubmit={this.onUsernameSubmitted}\n              sendMessage={this.sendMessage} />\n              <NewRoomForm createRoom= {this.createRoom} />\n            </div>\n            : (\n              route === 'signin'\n              ? <SignIn loadUser={this.loadUser} onRouteChange = {this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange = {this.onRouteChange} username = {this.state.user.username} />\n            )\n          }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}