{"ast":null,"code":"import _toConsumableArray from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Lillia/workspace/alpha2/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport SignIn from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport PartnerSearch from './components/partnersearch/partnersearch.js';\nimport Home from './components/home/home.js';\nimport Chatkit from '@pusher/chatkit';\nimport MessageList from './components/chat/messagelist.js';\nimport SendMessageForm from './components/chat/sendmessageform.js';\nimport RoomList from './components/chat/roomlist.js';\nimport NewRoomForm from './components/chat/newroomform.js';\nimport './App.css';\nimport { instanceLocator, tokenUrl, chatKey } from './config.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          username: data.username,\n          email: data.email,\n          experienceLevel: data.experiencelevel,\n          location: data.location\n        }\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'signout') {\n        _this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = {\n      input: '',\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        username: '',\n        email: '',\n        location: '',\n        experienceLevel: '',\n        roomId: null,\n        messages: [],\n        joinableRooms: [],\n        joinedRooms: []\n      }\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.subscribeToRoom = _this.subscribeToRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getRooms = _this.getRooms.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createRoom = _this.createRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // load user info\n\n\n  _createClass(App, [{\n    key: \"render\",\n    // componentDidMount(){\n    //   const chatManager = new Chatkit.ChatManager({\n    //     instanceLocator,\n    //     userId: 'joeclimber',\n    //     tokenProvider: new Chatkit.TokenProvider({\n    //       url: tokenUrl\n    //     })\n    //\n    //     // key: chatKey\n    //     })\n    //\n    //   chatManager.connect()\n    //   .then(currentUser => {\n    //     this.currentUser = currentUser\n    //     this.getRooms()\n    //     this.subscribeToRoom()\n    //\n    //\n    //   })\n    //   .catch(err => console.log('error on connecting', err))\n    // }\n    //\n    //\n    // getRooms() {\n    // this.currentUser.getJoinableRooms()\n    // .then(joinableRooms => {\n    //   this.setState({\n    //     joinableRooms,\n    //     joinedRooms: this.currentUser.rooms\n    //   })\n    // })\n    // .catch(err => console.log('error on joinable rooms', err))\n    // }\n    //\n    // subscribeToRoom(roomId) {\n    // this.setState({ messages:[] })\n    // this.currentUser.subscribeToRoom({\n    //   roomId:roomId,\n    //   hooks: {\n    //     onNewMessage: message => {\n    //       this.setState({\n    //         messages: [...this.state.messages, message]\n    //       })\n    //     }\n    //   }\n    // })\n    // .then(room => {\n    //   this.setState({\n    //     roomId: room.id\n    //   })\n    //   this.getRooms()\n    // })\n    // .catch(err => console.log('error subscribing to room', err))\n    // }\n    //\n    // sendMessage(text) {\n    // this.currentUser.sendMessage({\n    //   text,\n    //   roomId:this.state.roomId\n    //\n    // })\n    // }\n    //\n    // createRoom(name) {\n    //     this.currentUser.createRoom({\n    //           name\n    //       })\n    //       .then(room => this.subscribeToRoom(room.id))\n    //       .catch(err => console.log('error with createRoom: ', err))\n    // }\n    // begin render\n    value: function render() {\n      var _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          route = _this$state.route;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"alpha\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"\\u03B1\")), this.state.route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Home, {\n        username: this.state.user.username,\n        location: this.state.user.location,\n        experienceLevel: this.state.user.experienceLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(PartnerSearch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(RoomList, {\n        roomId: this.state.roomId,\n        subscribeToRoom: this.subscribeToRoom,\n        rooms: [].concat(_toConsumableArray(this.state.joinableRooms), _toConsumableArray(this.state.joinedRooms)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        roomId: this.state.roomId,\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(SendMessageForm, {\n        disabled: !this.state.roomId,\n        sendMessage: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(NewRoomForm, {\n        createRoom: this.createRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })) : route === 'signin' ? React.createElement(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        username: this.state.user.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Lillia/workspace/alpha2/src/App.js"],"names":["React","Component","Navigation","SignIn","Register","PartnerSearch","Home","Chatkit","MessageList","SendMessageForm","RoomList","NewRoomForm","instanceLocator","tokenUrl","chatKey","App","loadUser","data","setState","user","username","email","experienceLevel","experiencelevel","location","onRouteChange","route","isSignedIn","state","input","roomId","messages","joinableRooms","joinedRooms","sendMessage","bind","subscribeToRoom","getRooms","createRoom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport SignIn from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport PartnerSearch from './components/partnersearch/partnersearch.js';\nimport Home from './components/home/home.js';\nimport Chatkit from '@pusher/chatkit';\nimport MessageList from './components/chat/messagelist.js';\nimport SendMessageForm from './components/chat/sendmessageform.js';\nimport RoomList from './components/chat/roomlist.js';\nimport NewRoomForm from './components/chat/newroomform.js';\n\n\nimport './App.css';\n\nimport {instanceLocator, tokenUrl, chatKey} from './config.js'\n\n\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      input : '',\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        username: '',\n        email:'',\n        location: '',\n        experienceLevel: '',\n        roomId: null,\n        messages: [],\n        joinableRooms:[],\n        joinedRooms: []\n      }\n    }\n      this.sendMessage = this.sendMessage.bind(this);\n      this.subscribeToRoom = this.subscribeToRoom.bind(this);\n      this.getRooms = this.getRooms.bind(this);\n      this.createRoom = this.createRoom.bind(this)\n    }\n\n\n// load user info\nloadUser = (data) => {\n  this.setState({user: {\n    username: data.username,\n    email: data.email,\n    experienceLevel: data.experiencelevel,\n    location: data.location\n  }})\n}\n\n// form change functions\n  // onInputChange = (event) => {\n  //   this.setState({input: event.target.value});\n  // }\n\n// route change function\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  // componentDidMount(){\n  //   const chatManager = new Chatkit.ChatManager({\n  //     instanceLocator,\n  //     userId: 'joeclimber',\n  //     tokenProvider: new Chatkit.TokenProvider({\n  //       url: tokenUrl\n  //     })\n  //\n  //     // key: chatKey\n  //     })\n  //\n  //   chatManager.connect()\n  //   .then(currentUser => {\n  //     this.currentUser = currentUser\n  //     this.getRooms()\n  //     this.subscribeToRoom()\n  //\n  //\n  //   })\n  //   .catch(err => console.log('error on connecting', err))\n  // }\n  //\n  //\n  // getRooms() {\n  // this.currentUser.getJoinableRooms()\n  // .then(joinableRooms => {\n  //   this.setState({\n  //     joinableRooms,\n  //     joinedRooms: this.currentUser.rooms\n  //   })\n  // })\n  // .catch(err => console.log('error on joinable rooms', err))\n  // }\n  //\n  // subscribeToRoom(roomId) {\n  // this.setState({ messages:[] })\n  // this.currentUser.subscribeToRoom({\n  //   roomId:roomId,\n  //   hooks: {\n  //     onNewMessage: message => {\n  //       this.setState({\n  //         messages: [...this.state.messages, message]\n  //       })\n  //     }\n  //   }\n  // })\n  // .then(room => {\n  //   this.setState({\n  //     roomId: room.id\n  //   })\n  //   this.getRooms()\n  // })\n  // .catch(err => console.log('error subscribing to room', err))\n  // }\n  //\n  // sendMessage(text) {\n  // this.currentUser.sendMessage({\n  //   text,\n  //   roomId:this.state.roomId\n  //\n  // })\n  // }\n  //\n  // createRoom(name) {\n  //     this.currentUser.createRoom({\n  //           name\n  //       })\n  //       .then(room => this.subscribeToRoom(room.id))\n  //       .catch(err => console.log('error with createRoom: ', err))\n  // }\n\n// begin render\n  render() {\n\n    const {isSignedIn, route} = this.state;\n    return (\n      <div className=\"App\">\n          <header className=\"App-header\">\n            <Navigation isSignedIn = {isSignedIn} onRouteChange = {this.onRouteChange} />\n            <h1 className=\"alpha\">α</h1>\n          </header>\n          {this.state.route === 'home'\n            ? <div>\n              <Home\n                  username = {this.state.user.username}\n                  location = {this.state.user.location}\n                  experienceLevel = {this.state.user.experienceLevel}\n              />\n              <PartnerSearch />\n              <RoomList\n                roomId = {this.state.roomId}\n                subscribeToRoom={this.subscribeToRoom}\n                rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]} />\n              <MessageList\n                roomId={this.state.roomId}\n                messages={this.state.messages} />\n              <SendMessageForm\n              disabled={!this.state.roomId}\n              sendMessage={this.sendMessage} />\n              <NewRoomForm createRoom= {this.createRoom} />\n            </div>\n            : (\n              route === 'signin'\n              ? <SignIn loadUser={this.loadUser} onRouteChange = {this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange = {this.onRouteChange} username = {this.state.user.username} />\n            )\n          }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}