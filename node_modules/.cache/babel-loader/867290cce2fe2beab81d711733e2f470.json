{"ast":null,"code":"import _defineProperty from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Lillia/workspace/alpha2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Lillia/workspace/alpha2/src/components/register/register.js\";\nimport React from 'react';\nimport './register.css';\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.onUsernameChange = function (event) {\n      _this.setState({\n        username: event.target.value.toLowerCase().trim()\n      });\n    };\n\n    _this.onEmailChange = function (event) {\n      _this.setState({\n        email: event.target.value.toLowerCase().trim()\n      });\n    };\n\n    _this.onPasswordChange = function (event) {\n      _this.setState({\n        password: event.target.value\n      });\n    };\n\n    _this.onExperienceLevelChange = function (event) {\n      _this.setState({\n        experienceLevel: event.target.value\n      });\n    };\n\n    _this.onLocationChange = function (event) {\n      _this.setState({\n        location: event.target.value.toLowerCase().trim()\n      });\n    };\n\n    _this.onSubmitSignIn = function () {\n      fetch('https://damp-forest-34333.herokuapp.com/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: _this.state.email,\n          password: _this.state.password,\n          username: _this.state.username,\n          experienceLevel: _this.state.experienceLevel,\n          location: _this.state.location\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (user) {\n        if (_this.state.email === '' || _this.state.password === '' || _this.state.username === '' || _this.state.experienceLevel === '' || _this.state.location === '') {\n          return alert('Please fill in all fields to register');\n        } else {\n          alert(\"Thank you \".concat(_this.state.username, \" for registering for Alpha!\"));\n\n          _this.props.submitUser(_this.state.username);\n\n          return _this.props.onRouteChange('signin');\n        }\n      }).catch(function (err) {\n        alert('Could not register user!');\n      });\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      username: '',\n      experienceLevel: {},\n      location: ''\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return (// begin registration form\n        React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"signin-logo mb-4\",\n          style: {\n            width: '100px'\n          },\n          src: require('../../img/alpha-logo.png'),\n          alt: \"Alpha Logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"h3 mb-3 font-weight-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \" Setup Your Profile! \"), React.createElement(\"label\", {\n          htmlFor: \"email\",\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \" Email: \"), React.createElement(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: this.onEmailChange,\n          placeholder: \"email\",\n          className: \"form-control\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"username\",\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \" Username: \"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          onChange: this.onUsernameChange,\n          placeholder: \"username\",\n          className: \"form-control\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"location\",\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Location: \"), React.createElement(\"input\", (_React$createElement = {\n          type: \"text\",\n          name: \"location\",\n          id: \"location\",\n          onChange: this.onLocationChange,\n          placeholder: \"location\",\n          className: \"form-control\"\n        }, _defineProperty(_React$createElement, \"placeholder\", \"city\"), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(\"label\", {\n          htmlFor: \"password\",\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Password: \"), React.createElement(\"input\", {\n          type: \"password\",\n          name: \"psw\",\n          id: \"password\",\n          onChange: this.onPasswordChange,\n          placeholder: \"password\",\n          className: \"form-control\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"registerLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"experience\",\n          className: \"experience-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \" Experience Level: \")), React.createElement(\"div\", {\n          className: \"inputField\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          onChange: this.onExperienceLevelChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"--\"), React.createElement(\"option\", {\n          value: \"beginner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Beginner\"), React.createElement(\"option\", {\n          value: \"intermediate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Intermediate\"), React.createElement(\"option\", {\n          value: \"advanced\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"Advanced\"), React.createElement(\"option\", {\n          value: \"elite\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Elite\")))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.onSubmitSignIn,\n          className: \"btn btn-lg btn-secondary btn-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \" Submit \"))))\n      );\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport default Register;","map":{"version":3,"sources":["/Users/Lillia/workspace/alpha2/src/components/register/register.js"],"names":["React","Register","props","onUsernameChange","event","setState","username","target","value","toLowerCase","trim","onEmailChange","email","onPasswordChange","password","onExperienceLevelChange","experienceLevel","onLocationChange","location","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","state","then","response","json","user","alert","submitUser","onRouteChange","catch","err","width","require","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './register.css'\n\nclass Register extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      username: '',\n      experienceLevel: {},\n      location: ''\n    };\n  }\n\n  onUsernameChange = (event) => {\n    this.setState({username: event.target.value.toLowerCase().trim()})\n  }\n\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value.toLowerCase().trim()})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  onExperienceLevelChange = (event) => {\n    this.setState({experienceLevel: event.target.value})\n  }\n\n  onLocationChange = (event) => {\n\n    this.setState({location: event.target.value.toLowerCase().trim()})\n  }\n\n\n  onSubmitSignIn = () => {\n    fetch('https://damp-forest-34333.herokuapp.com/register',{\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        username: this.state.username,\n        experienceLevel: this.state.experienceLevel,\n        location: this.state.location\n      })\n    })\n    .then(response => response.json())\n    .then(user => {\n      if (this.state.email === '' || this.state.password === '' || this.state.username === '' ||\n          this.state.experienceLevel === '' || this.state.location === '' ) {\n        return alert('Please fill in all fields to register');\n      } else {\n        alert(`Thank you ${this.state.username} for registering for Alpha!`);\n        this.props.submitUser(this.state.username);\n        return this.props.onRouteChange('signin');\n      }\n    })\n    .catch(err => {\n      alert('Could not register user!');\n    })\n  }\n\n  render(){\n  return (\n    // begin registration form\n      <div className = 'text-center' >\n        <div className = 'form-signin'>\n          <img className=\"signin-logo mb-4\" style={{width: '100px'}} src={require('../../img/alpha-logo.png')} alt=\"Alpha Logo\" />\n        <div>\n          <h4 className=\"h3 mb-3 font-weight-normal\" > Setup Your Profile! </h4>\n          <label htmlFor=\"email\" className='sr-only'> Email: </label>\n          <input type=\"email\"\n                      name=\"email\"\n                      onChange = {this.onEmailChange}\n                      placeholder='email'\n                      className='form-control'\n                      required />\n          <label htmlFor=\"username\" className='sr-only'> Username: </label>\n          <input\n                      type=\"text\"\n                      name=\"username\"\n                      id=\"username\"\n                      onChange = {this.onUsernameChange}\n                      placeholder='username'\n                      className='form-control'\n                      required\n                      />\n          <label htmlFor=\"location\" className='sr-only'>Location: </label>\n          <input\n                      type=\"text\"\n                      name=\"location\"\n                      id=\"location\"\n                      onChange = {this.onLocationChange}\n                      placeholder='location'\n                      className='form-control'\n                      placeholder = 'city'\n                                />\n          <label htmlFor=\"password\" className='sr-only'>Password: </label>\n          <input type=\"password\"\n                       name=\"psw\"\n                       id = 'password'\n                       onChange = {this.onPasswordChange}\n                       placeholder='password'\n                       className='form-control'\n                       required />\n\n              <div>\n                <div className='registerLabel'>\n                  <label htmlFor=\"experience\" className='experience-label'> Experience Level: </label>\n                </div>\n                <div className= 'inputField'>\n                  <select onChange = {this.onExperienceLevelChange}>\n                    <option value=\"none\">--</option>\n                    <option value=\"beginner\">Beginner</option>\n                    <option value=\"intermediate\">Intermediate</option>\n                    <option value=\"advanced\">Advanced</option>\n                    <option value=\"elite\">Elite</option>\n                  </select>\n                </div>\n\n              </div>\n              <br />\n\n              <button onClick ={this.onSubmitSignIn} className= 'btn btn-lg btn-secondary btn-block'> Submit </button>\n\n            </div>\n            </div>\n          </div>\n\n\n\n\n  )\n\n}\n\n\n\n}\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}